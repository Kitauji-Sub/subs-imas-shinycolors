[Script Info]
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.709
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: C:/Users/scree/Desktop/[SubsPlease] The iDOLM@STER Shiny Colors S2 - 09 (1080p) [F44779F9].mkv
Video File: C:/Users/scree/Desktop/[SubsPlease] The iDOLM@STER Shiny Colors S2 - 09 (1080p) [F44779F9].mkv
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Active Line: 12
Video Position: 32403

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: 歌CN_迷光,思源黑体 Heavy,52,&H00F0F0F0,&H000000FF,&H001C01AF,&H00000000,0,-1,0,0,100,100,1.1,0,1,0.6,0,7,70,70,125,1
Style: 歌JP_迷光,Source Han Sans Heavy,52,&H00F0F0F0,&H000000FF,&H001C01AF,&H00000000,0,-1,0,0,100,100,1.1,0,1,0.6,0,7,70,70,70,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Comment: 0,0:15:08.52,0:15:10.52,歌JP_迷光,settings,0,0,0,code once anystyle,single_frame = 41.70833333333333; k_time = 1; speed = 400; speed_out = 200; slices = 10; error_offset = 20;
Comment: 0,0:00:00.00,0:00:00.00,歌JP_迷光,正态分布,0,0,0,code once anystyle,local NV_MAGICCONST = 1.71552776992  function normalvariate(mu, sigma) local z     while true do         local u1 = math.random()         local u2 = 1.0 - math.random()         z = NV_MAGICCONST*(u1-0.5)/u2         local zz = z*z/4.0         if zz <= -math.log(u2) then             break         end     end              return mu + z*sigma  end
Comment: 0,0:00:00.00,0:00:00.00,歌JP_迷光,tofixed,0,0,0,code once anystyle,function toFixed (num) return string.format("%.2f",tostring(num)) end
Comment: 0,0:15:10.52,0:15:12.52,歌JP_迷光,曲线,0,0,0,code once anystyle,local animations = {     linear = function(v1, v2, position)         return CubicBezier(v1, v2, 0, 0, 1, 1, position)     end,     easeInSine = function(v1, v2, position)         return CubicBezier(v1, v2, 0.47, 0, 0.745, 0.715, position)     end,     easeOutSine = function(v1, v2, position)         return CubicBezier(v1, v2, 0.39, 0.575, 0.565, 1, position)     end,     easeInOutSine = function(v1, v2, position)         return CubicBezier(v1, v2, 0.445, 0.05, 0.55, 0.95, position)     end,     easeInQuad = function(v1, v2, position)         return CubicBezier(v1, v2, 0.55, 0.085, 0.68, 0.53, position)     end,     easeOutQuad = function(v1, v2, position)         return CubicBezier(v1, v2, 0.25, 0.46, 0.45, 0.94, position)     end,     easeInOutQuad = function(v1, v2, position)         return CubicBezier(v1, v2, 0.455, 0.03, 0.515, 0.955, position)     end,     easeInCubic = function(v1, v2, position)         return CubicBezier(v1, v2, 0.55, 0.055, 0.675, 0.19, position)     end,     easeOutCubic = function(v1, v2, position)         return CubicBezier(v1, v2, 0.215, 0.61, 0.355, 1, position)     end,     easeInOutCubic = function(v1, v2, position)         return CubicBezier(v1, v2, 0.645, 0.045, 0.355, 1, position)     end,     easeInQuart = function(v1, v2, position)         return CubicBezier(v1, v2, 0.895, 0.03, 0.685, 0.22, position)     end,     easeOutQuart = function(v1, v2, position)         return CubicBezier(v1, v2, 0.165, 0.84, 0.44, 1, position)     end,     easeInOutQuart = function(v1, v2, position)         return CubicBezier(v1, v2, 0.77, 0, 0.175, 1, position)     end,     easeInQuint = function(v1, v2, position)         return CubicBezier(v1, v2, 0.755, 0.05, 0.855, 0.06, position)     end,     easeOutQuint = function(v1, v2, position)         return CubicBezier(v1, v2, 0.23, 1, 0.32, 1, position)     end,     easeInOutQuint = function(v1, v2, position)         return CubicBezier(v1, v2, 0.86, 0, 0.07, 1, position)     end,     easeInExpo = function(v1, v2, position)         return CubicBezier(v1, v2, 0.95, 0.05, 0.795, 0.035, position)     end,     easeOutExpo = function(v1, v2, position)         return CubicBezier(v1, v2, 0.19, 1, 0.22, 1, position)     end,     easeInOutExpo = function(v1, v2, position)         return CubicBezier(v1, v2, 1, 0, 0, 1, position)     end,     easeInCirc = function(v1, v2, position)         return CubicBezier(v1, v2, 0.6, 0.04, 0.98, 0.335, position)     end,     easeOutCirc = function(v1, v2, position)         return CubicBezier(v1, v2, 0.075, 0.82, 0.165, 1, position)     end,     easeInOutCirc = function(v1, v2, position)         return CubicBezier(v1, v2, 0.785, 0.135, 0.15, 0.86, position)     end,     easeInBack = function(v1, v2, position)         return CubicBezier(v1, v2, 0.6, -0.28, 0.735, 0.045, position)     end,     easeOutBack = function(v1, v2, position)         return CubicBezier(v1, v2, 0.175, 0.885, 0.32, 1.275, position)     end,     easeInOutBack = function(v1, v2, position)         return CubicBezier(v1, v2, 0.68, -0.55, 0.265, 1.55, position)     end, } local animations_default = {     easeIn = animations.easeInQuad,     easeOut = animations.easeOutQuad,     easeInOut = animations.easeInOutQuad,     linear = animations.linear, } function Animation(v1, v2, position, type)     local animation = animations[type]     if animation then         return animation(v1, v2, position)     else         if animations_default[type] then             return animations_default[type](v1, v2, position)         end         error("Unknown animation type: " .. type)     end end function CubicBezier(v1, v2, x1, y1, x2, y2, position)     local ax = 3 * x1 - 3 * x2 + 1     local bx = 3 * x2 - 6 * x1     local cx = 3 * x1     local ay = 3 * y1 - 3 * y2 + 1     local by = 3 * y2 - 6 * y1     local cy = 3 * y1     local x = position     local t = 0.5     local epsilon = 0.00001     local Bt = 0     local dBt = 0     for i = 1, 8 do         Bt = ax * t^3 + bx * t^2 + cx * t         if math.abs(Bt - x) < epsilon then             break         end         dBt = 3 * ax * t^2 + 2 * bx * t + cx         t = t - (Bt - x) / dBt     end     local t0 = 0     local t1 = 1     for i = 1, 10 do         if math.abs(Bt - x) < epsilon then             break         end         Bt = ax * t^3 + bx * t^2 + cx * t         if Bt < x then             t0 = t         else             t1 = t         end         t = (t0 + t1) / 2     end     local Bty = ay * t^3 + by * t^2 + cy * t     return v1 + (v2 - v1) * Bty end
Comment: 0,0:15:12.52,0:15:12.52,歌JP_迷光,,0,0,0,code line anystyle,counter = 0; counter_max = math.floor((speed / single_frame / k_time) + 0.5);
Comment: 0,0:15:12.52,0:15:12.52,歌JP_迷光,in,0,0,0,template line,!maxloop("slice", math.floor(slices - slices * counter/counter_max + 2) )!!maxloop("fbf", math.floor((speed / single_frame / k_time) + 0.5))!!set("counter", loopctx.state.fbf)!!set("animated_position", Animation(3, 0.2, loopctx.state.fbf/loopctx.max.fbf, "easeIn"))!!set("rand_offset", normalvariate(0,animated_position) * error_offset)!!retime("abs",line.start_time + (single_frame * (loopctx.state.fbf - 1) * k_time),loopctx.state.fbf == loopctx.max.fbf and line.start_time + speed or line.start_time + (single_frame * loopctx.state.fbf * k_time))!{\an7\pos(!toFixed(line.left + rand_offset)!,!toFixed(line.top)!)\clip(0,!toFixed(line.top + ( line.height / loopctx.max.slice ) * ( loopctx.state.slice - 1))!,1920,!toFixed(line.top + ( line.height / loopctx.max.slice ) * loopctx.state.slice)!)}
Comment: 0,0:15:12.52,0:15:12.52,歌JP_迷光,,0,0,0,template line,!retime("abs",line.start_time + speed,line.end_time - speed_out)!{\an7\pos(!line.left!,!line.top!)}
Comment: 0,0:15:12.52,0:15:12.52,歌JP_迷光,out,0,0,0,template line,!maxloop("slice", math.floor(slices * counter/counter_max + 2) )!!maxloop("fbf", math.floor((speed_out / single_frame / k_time) + 0.5))!!set("counter", loopctx.state.fbf)!!set("animated_position", Animation(0.2, 3, loopctx.state.fbf/loopctx.max.fbf, "easeOut"))!!set("rand_offset", normalvariate(0,animated_position) * error_offset)!!retime("abs",loopctx.state.fbf == 1 and line.end_time - speed_out or line.end_time - (single_frame * (loopctx.max.fbf - loopctx.state.fbf + 1) * k_time), line.end_time - (single_frame * (loopctx.max.fbf - loopctx.state.fbf) * k_time))!{\an7\pos(!line.left + rand_offset!,!line.top!)\clip(0,!line.top + ( line.height / loopctx.max.slice ) * ( loopctx.state.slice - 1)!,1920,!line.top + ( line.height / loopctx.max.slice ) * loopctx.state.slice!)}
Comment: 0,0:15:12.52,0:15:12.52,歌CN_迷光,in,0,0,0,template line,!maxloop("slice", math.floor(slices - slices * counter/counter_max + 2) )!!maxloop("fbf", math.floor((speed / single_frame / k_time) + 0.5))!!set("counter", loopctx.state.fbf)!!set("animated_position", Animation(3, 0.2, loopctx.state.fbf/loopctx.max.fbf, "easeIn"))!!set("rand_offset", normalvariate(0,animated_position) * error_offset)!!retime("abs",line.start_time + (single_frame * (loopctx.state.fbf - 1) * k_time),loopctx.state.fbf == loopctx.max.fbf and line.start_time + speed or line.start_time + (single_frame * loopctx.state.fbf * k_time))!{\an7\pos(!toFixed(line.left + rand_offset)!,!toFixed(line.top)!)\clip(0,!toFixed(line.top + ( line.height / loopctx.max.slice ) * ( loopctx.state.slice - 1))!,1920,!toFixed(line.top + ( line.height / loopctx.max.slice ) * loopctx.state.slice)!)}
Comment: 0,0:15:12.52,0:15:12.52,歌CN_迷光,,0,0,0,template line,!retime("abs",line.start_time + speed,line.end_time - speed_out)!{\an7\pos(!line.left!,!line.top!)}
Comment: 0,0:15:12.52,0:15:12.52,歌CN_迷光,out,0,0,0,template line,!maxloop("slice", math.floor(slices * counter/counter_max + 2) )!!maxloop("fbf", math.floor((speed_out / single_frame / k_time) + 0.5))!!set("counter", loopctx.state.fbf)!!set("animated_position", Animation(0.2, 3, loopctx.state.fbf/loopctx.max.fbf, "easeOut"))!!set("rand_offset", normalvariate(0,animated_position) * error_offset)!!retime("abs",loopctx.state.fbf == 1 and line.end_time - speed_out or line.end_time - (single_frame * (loopctx.max.fbf - loopctx.state.fbf + 1) * k_time), line.end_time - (single_frame * (loopctx.max.fbf - loopctx.state.fbf) * k_time))!{\an7\pos(!line.left + rand_offset!,!line.top!)\clip(0,!line.top + ( line.height / loopctx.max.slice ) * ( loopctx.state.slice - 1)!,1920,!line.top + ( line.height / loopctx.max.slice ) * loopctx.state.slice!)}
Comment: 0,0:15:12.52,0:15:12.52,歌JP_迷光,overlay,0,0,0,mixin line anystyle,{\blur4}
Comment: 0,0:22:31.47,0:22:32.43,歌JP_迷光,,0,0,0,歌,#Future Designer
Comment: 0,0:22:46.28,0:22:50.94,歌JP_迷光,,0,0,0,kara,記憶に映るSilhouette　割り込む蒼いRegret
Comment: 0,0:22:51.18,0:22:55.76,歌JP_迷光,,0,0,0,kara,REALと対峙しながら　ピントをあわせてきた
Comment: 0,0:22:55.98,0:23:00.64,歌JP_迷光,,0,0,0,kara,現状維持はアレルギー　逆境ならばエネルギー
Comment: 0,0:23:00.75,0:23:06.75,歌JP_迷光,,0,0,0,kara,過去の自分を認めて　鎖を断ち切って　Outbreak
Comment: 0,0:23:07.01,0:23:09.47,歌JP_迷光,,0,0,0,kara,Desire…
Comment: 0,0:23:09.74,0:23:14.24,歌JP_迷光,,0,0,0,kara,淀みなき感情　手に入れた　Brave Soul
Comment: 0,0:23:14.24,0:23:18.06,歌JP_迷光,,0,0,0,kara,今、狼煙をあげるよ
Comment: 0,0:23:18.06,0:23:27.46,歌JP_迷光,,0,0,0,kara,時代は変わり続けても　自分の道は自分が決める
Comment: 0,0:23:27.72,0:23:38.20,歌JP_迷光,,0,0,0,kara,覚悟は運命を超えて　闇を切り拓いてく
Comment: 0,0:23:38.42,0:23:43.60,歌JP_迷光,,0,0,0,kara,想像の向こうまで
Comment: 0,0:22:46.28,0:22:50.94,歌CN_迷光,,0,0,0,kara,记忆中浮现的剪影 穿插着苍蓝的悔恨
Comment: 0,0:22:51.18,0:22:55.76,歌CN_迷光,,0,0,0,kara,与现实对峙着 不断调整焦距
Comment: 0,0:22:55.98,0:23:00.64,歌CN_迷光,,0,0,0,kara,维持现状遇阻力 逆境反成我动力
Comment: 0,0:23:00.75,0:23:06.75,歌CN_迷光,,0,0,0,kara,承认过去的自己 斩断锁链 爆发而出
Comment: 0,0:23:07.01,0:23:09.47,歌CN_迷光,,0,0,0,kara,渴望……
Comment: 0,0:23:09.74,0:23:14.24,歌CN_迷光,,0,0,0,kara,抓住了无滞的感情 勇敢的灵魂
Comment: 0,0:23:14.24,0:23:18.06,歌CN_迷光,,0,0,0,kara,此刻 点燃狼烟吧
Comment: 0,0:23:18.06,0:23:27.46,歌CN_迷光,,0,0,0,kara,纵使时代不断变迁 也要自己选择道路
Comment: 0,0:23:27.72,0:23:38.20,歌CN_迷光,,0,0,0,kara,决心战胜了命运 劈开黑暗向前行
Comment: 0,0:23:38.42,0:23:43.60,歌CN_迷光,,0,0,0,kara,直至想象的彼岸
